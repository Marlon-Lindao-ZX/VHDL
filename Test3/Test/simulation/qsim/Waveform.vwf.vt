// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "01/13/2020 19:07:29"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Bloque
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Bloque_vlg_vec_tst();
// constants                                           
// general purpose registers
reg enable;
reg Listo;
reg X0;
reg X1;
reg X2;
reg X3;
// wires                                               
wire V0;
wire V1;
wire Vuelto;
wire Y0;
wire Y1;
wire Y2;

// assign statements (if any)                          
Bloque i1 (
// port map - connection between master ports and signals/registers   
	.enable(enable),
	.Listo(Listo),
	.V0(V0),
	.V1(V1),
	.Vuelto(Vuelto),
	.X0(X0),
	.X1(X1),
	.X2(X2),
	.X3(X3),
	.Y0(Y0),
	.Y1(Y1),
	.Y2(Y2)
);
initial 
begin 
#1000000 $finish;
end 

// enable
initial
begin
	enable = 1'b0;
end 

// Listo
initial
begin
	Listo = 1'b0;
	Listo = #10000 1'b1;
	Listo = #20000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #15000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #20000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #15000 1'b0;
	Listo = #10000 1'b1;
	Listo = #5000 1'b0;
	Listo = #25000 1'b1;
	Listo = #5000 1'b0;
	Listo = #25000 1'b1;
	Listo = #5000 1'b0;
	Listo = #15000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #10000 1'b1;
	Listo = #10000 1'b0;
	Listo = #20000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #15000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #15000 1'b1;
	Listo = #20000 1'b0;
	Listo = #5000 1'b1;
	Listo = #20000 1'b0;
	Listo = #15000 1'b1;
	Listo = #15000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
	Listo = #35000 1'b0;
	Listo = #15000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #20000 1'b1;
	Listo = #5000 1'b0;
	Listo = #10000 1'b1;
	Listo = #5000 1'b0;
	Listo = #20000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #10000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #15000 1'b1;
	Listo = #5000 1'b0;
	Listo = #10000 1'b1;
	Listo = #5000 1'b0;
	Listo = #10000 1'b1;
	Listo = #20000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #20000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #15000 1'b1;
	Listo = #5000 1'b0;
	Listo = #15000 1'b1;
	Listo = #10000 1'b0;
	Listo = #45000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #20000 1'b0;
	Listo = #5000 1'b1;
	Listo = #30000 1'b0;
	Listo = #5000 1'b1;
	Listo = #5000 1'b0;
	Listo = #5000 1'b1;
	Listo = #10000 1'b0;
	Listo = #5000 1'b1;
end 

// X0
initial
begin
	X0 = 1'b0;
	X0 = #5000 1'b1;
	X0 = #5000 1'b0;
	X0 = #15000 1'b1;
	X0 = #15000 1'b0;
	X0 = #10000 1'b1;
	X0 = #20000 1'b0;
	X0 = #5000 1'b1;
	X0 = #25000 1'b0;
	X0 = #10000 1'b1;
	X0 = #5000 1'b0;
	X0 = #5000 1'b1;
	X0 = #10000 1'b0;
	X0 = #5000 1'b1;
	X0 = #5000 1'b0;
	X0 = #10000 1'b1;
	X0 = #30000 1'b0;
	X0 = #15000 1'b1;
	X0 = #25000 1'b0;
	X0 = #5000 1'b1;
	X0 = #10000 1'b0;
	X0 = #10000 1'b1;
	X0 = #5000 1'b0;
	X0 = #20000 1'b1;
	X0 = #10000 1'b0;
	X0 = #10000 1'b1;
	X0 = #30000 1'b0;
	X0 = #5000 1'b1;
	X0 = #10000 1'b0;
	X0 = #5000 1'b1;
	X0 = #5000 1'b0;
	X0 = #5000 1'b1;
	X0 = #10000 1'b0;
	X0 = #5000 1'b1;
	X0 = #5000 1'b0;
	X0 = #10000 1'b1;
	X0 = #5000 1'b0;
	X0 = #10000 1'b1;
	X0 = #15000 1'b0;
	X0 = #30000 1'b1;
	X0 = #15000 1'b0;
	X0 = #15000 1'b1;
	X0 = #10000 1'b0;
	X0 = #5000 1'b1;
	X0 = #10000 1'b0;
	X0 = #10000 1'b1;
	X0 = #5000 1'b0;
	X0 = #5000 1'b1;
	X0 = #5000 1'b0;
	X0 = #5000 1'b1;
	X0 = #10000 1'b0;
	X0 = #55000 1'b1;
	X0 = #5000 1'b0;
	X0 = #5000 1'b1;
	X0 = #5000 1'b0;
	X0 = #10000 1'b1;
	X0 = #5000 1'b0;
	X0 = #10000 1'b1;
	X0 = #5000 1'b0;
	X0 = #5000 1'b1;
	X0 = #15000 1'b0;
	X0 = #10000 1'b1;
	X0 = #10000 1'b0;
	X0 = #10000 1'b1;
	X0 = #10000 1'b0;
	X0 = #15000 1'b1;
	X0 = #5000 1'b0;
	X0 = #20000 1'b1;
	X0 = #20000 1'b0;
	X0 = #30000 1'b1;
	X0 = #10000 1'b0;
	X0 = #10000 1'b1;
	X0 = #20000 1'b0;
	X0 = #15000 1'b1;
	X0 = #10000 1'b0;
	X0 = #5000 1'b1;
	X0 = #5000 1'b0;
	X0 = #20000 1'b1;
	X0 = #5000 1'b0;
	X0 = #15000 1'b1;
	X0 = #10000 1'b0;
	X0 = #5000 1'b1;
	X0 = #10000 1'b0;
	X0 = #30000 1'b1;
	X0 = #5000 1'b0;
	X0 = #5000 1'b1;
	X0 = #15000 1'b0;
	X0 = #5000 1'b1;
	X0 = #10000 1'b0;
end 

// X1
initial
begin
	X1 = 1'b1;
	X1 = #10000 1'b0;
	X1 = #15000 1'b1;
	X1 = #15000 1'b0;
	X1 = #10000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #20000 1'b1;
	X1 = #15000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #25000 1'b1;
	X1 = #5000 1'b0;
	X1 = #25000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
	X1 = #5000 1'b0;
	X1 = #20000 1'b1;
	X1 = #10000 1'b0;
	X1 = #10000 1'b1;
	X1 = #20000 1'b0;
	X1 = #15000 1'b1;
	X1 = #10000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #15000 1'b1;
	X1 = #35000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
	X1 = #10000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #15000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #10000 1'b0;
	X1 = #20000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #15000 1'b0;
	X1 = #10000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #15000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #15000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
	X1 = #10000 1'b0;
	X1 = #40000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
	X1 = #15000 1'b0;
	X1 = #25000 1'b1;
	X1 = #10000 1'b0;
	X1 = #30000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
	X1 = #15000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #10000 1'b0;
	X1 = #20000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #5000 1'b1;
	X1 = #20000 1'b0;
	X1 = #5000 1'b1;
	X1 = #10000 1'b0;
	X1 = #15000 1'b1;
	X1 = #10000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
	X1 = #10000 1'b0;
	X1 = #10000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
	X1 = #10000 1'b0;
	X1 = #5000 1'b1;
	X1 = #15000 1'b0;
	X1 = #5000 1'b1;
	X1 = #5000 1'b0;
	X1 = #10000 1'b1;
end 

// X2
initial
begin
	X2 = 1'b0;
	X2 = #5000 1'b1;
	X2 = #10000 1'b0;
	X2 = #10000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #25000 1'b0;
	X2 = #5000 1'b1;
	X2 = #15000 1'b0;
	X2 = #40000 1'b1;
	X2 = #5000 1'b0;
	X2 = #10000 1'b1;
	X2 = #5000 1'b0;
	X2 = #20000 1'b1;
	X2 = #30000 1'b0;
	X2 = #10000 1'b1;
	X2 = #15000 1'b0;
	X2 = #10000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #25000 1'b0;
	X2 = #10000 1'b1;
	X2 = #5000 1'b0;
	X2 = #15000 1'b1;
	X2 = #5000 1'b0;
	X2 = #15000 1'b1;
	X2 = #15000 1'b0;
	X2 = #5000 1'b1;
	X2 = #15000 1'b0;
	X2 = #10000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #10000 1'b1;
	X2 = #15000 1'b0;
	X2 = #10000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #15000 1'b1;
	X2 = #5000 1'b0;
	X2 = #10000 1'b1;
	X2 = #15000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #30000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #25000 1'b0;
	X2 = #5000 1'b1;
	X2 = #10000 1'b0;
	X2 = #10000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #20000 1'b0;
	X2 = #5000 1'b1;
	X2 = #15000 1'b0;
	X2 = #15000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #25000 1'b0;
	X2 = #10000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #15000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #30000 1'b0;
	X2 = #15000 1'b1;
	X2 = #10000 1'b0;
	X2 = #10000 1'b1;
	X2 = #10000 1'b0;
	X2 = #10000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #10000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
	X2 = #5000 1'b0;
	X2 = #5000 1'b1;
end 

// X3
initial
begin
	X3 = 1'b0;
	X3 = #15000 1'b1;
	X3 = #50000 1'b0;
	X3 = #20000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #15000 1'b1;
	X3 = #10000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #15000 1'b1;
	X3 = #5000 1'b0;
	X3 = #10000 1'b1;
	X3 = #5000 1'b0;
	X3 = #10000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #10000 1'b1;
	X3 = #20000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #10000 1'b1;
	X3 = #10000 1'b0;
	X3 = #10000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #10000 1'b0;
	X3 = #5000 1'b1;
	X3 = #20000 1'b0;
	X3 = #5000 1'b1;
	X3 = #25000 1'b0;
	X3 = #5000 1'b1;
	X3 = #35000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #10000 1'b0;
	X3 = #10000 1'b1;
	X3 = #5000 1'b0;
	X3 = #15000 1'b1;
	X3 = #10000 1'b0;
	X3 = #30000 1'b1;
	X3 = #5000 1'b0;
	X3 = #15000 1'b1;
	X3 = #25000 1'b0;
	X3 = #10000 1'b1;
	X3 = #20000 1'b0;
	X3 = #20000 1'b1;
	X3 = #5000 1'b0;
	X3 = #15000 1'b1;
	X3 = #10000 1'b0;
	X3 = #30000 1'b1;
	X3 = #10000 1'b0;
	X3 = #25000 1'b1;
	X3 = #15000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #10000 1'b1;
	X3 = #10000 1'b0;
	X3 = #5000 1'b1;
	X3 = #20000 1'b0;
	X3 = #5000 1'b1;
	X3 = #10000 1'b0;
	X3 = #30000 1'b1;
	X3 = #20000 1'b0;
	X3 = #5000 1'b1;
	X3 = #10000 1'b0;
	X3 = #10000 1'b1;
	X3 = #15000 1'b0;
	X3 = #10000 1'b1;
	X3 = #30000 1'b0;
	X3 = #15000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #25000 1'b0;
	X3 = #5000 1'b1;
	X3 = #5000 1'b0;
	X3 = #5000 1'b1;
	X3 = #10000 1'b0;
end 
endmodule

